# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: '2'
services:

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    networks: 
      - cluster_network
    ports:
      - '3000:3000'
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_ENABLE_GZIP=true
      - GF_USERS_DEFAULT_THEME=light
      - GF_DEFAULT_APP_MODE=development
      - GF_INSTALL_PLUGINS=redis-datasource
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_SKIP_LOGIN_BUTTON=true
    command: >
      bash -c '
      until curl -s http://redis-node-0:6379; do
        echo "Waiting for Redis..."
        sleep 2
      done && grafana-server --homepath=/usr/share/grafana --config=/etc/grafana/grafana.ini'

    # volumes:
      # - ./datasources:/etc/grafana/provisioning/datasources
      # Uncomment to preserve Grafana configuration
      # - ./data:/var/lib/grafana
      
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
    #   - redis-cluster_data-0:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
    #   - redis-cluster_data-1:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
    #   - redis-cluster_data-2:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
    #   - redis-cluster_data-3:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
    #   - redis-cluster_data-4:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.2
    networks: 
      - cluster_network
    # volumes:
      # - redis-cluster_data-5:/bitnami/redis/data
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDISCLI_AUTH=bitnami'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'

# volumes:
#   redis-cluster_data-0:
#     driver: local
#   redis-cluster_data-1:
#     driver: local
#   redis-cluster_data-2:
#     driver: local
#   redis-cluster_data-3:
#     driver: local
#   redis-cluster_data-4:
#     driver: local
#   redis-cluster_data-5:
#     driver: local


  cconfigure-grafana:
    # image: alpine
    networks:
      - cluster_network
    build:
      context: ./configure-grafana
      dockerfile: Dockerfile
    depends_on:
      - grafana
    # entrypoint: /bin/sh
    # command: -c "
    #   apk add --no-cache curl &&
    #   until curl -s http://redis-node-0:6379; do
    #     echo 'Waiting for Redis...'
    #     sleep 2
    #   done && curl -X POST -H 'Content-Type:application/json' -d ' { \"name\":"api-key\", \"role\":"Admin\", \"secondsToLive\":86400 }' http://admin:admin_password@grafana:3000/api/auth/keys &&
    #   curl -X POST -H 'Content-Type:application/json' -d ' { "id":null, "orgId":1, "folderId":null, "overwrite":false, "dashboard":{ "id":null, "uid":null, "title":"Sample Dashboard", "timezone":"browser", "schemaVersion":27, "version":0, "time":{"from":"now-6h","to":"now"}, "refresh":"10s", "panels":[], "annotations":{ "list":[] }, "hideControls":false }, "folderId":0, "overwrite":false }' http://admin:admin_password@grafana:3000/api/dashboards/db"


networks:
  cluster_network:
    driver: bridge